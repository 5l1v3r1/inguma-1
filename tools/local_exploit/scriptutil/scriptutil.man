MMOODDUULLEE  NNAAMMEE
    scriptutil

DDEESSCCRRIIPPTTIIOONN
    Copyright (c) 2008, Muharem Hrnjadovic

    All rights reserved.

    Redistribution and use in source and binary forms, with or without 
    modification, are permitted provided that the following conditions are 
    met:

      - Redistributions of source code must retain the above copyright 
        notice, this list of conditions and the following disclaimer.
      - Redistributions in binary form must reproduce the above copyright 
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the 
        distribution.
      - Neither the name of Muharem Hrnjadovic nor the names of other 
        contributors may be used to endorse or promote products derived 
        from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
    IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED 
    TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A 
    PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
    OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
    DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

    
    ---------------------------------------------------------------------------

    Module providing functions commonly used in shell scripting:

      - ffind()    : finds files in a directory tree
      - ffindgrep(): finds files in a directory tree and matches their 
        content to regular expressions
      - freplace() : in-place search/replace of files in a directory tree 
        with regular expressions
      - printr()   : prints the results of the ffind()/ffindgrep() 
        functions

    Please see the 
    u'tutorial'<http://muharem.wordpress.com/2007/05/20/python-find-files-using-unix-shell-style-wildcards/>
    as well as the documentation strings of the particular functions for 
    detailed information.


CCLLAASSSSEESS
    
    class SSccrriippttEErrrroorr(exceptions.Exception)
     |  The exception raised in case of failures.
     |  
     |  IInnhheerriitteedd  mmeetthhooddss
     |      eexxcceeppttiioonnss..BBaasseeEExxcceeppttiioonn..____ddeellaattttrr____(...)
     |      eexxcceeppttiioonnss..BBaasseeEExxcceeppttiioonn..____ggeettaattttrriibbuuttee____(...)
     |      eexxcceeppttiioonnss..BBaasseeEExxcceeppttiioonn..____ggeettiitteemm____(x, y)
     |      eexxcceeppttiioonnss..BBaasseeEExxcceeppttiioonn..____ggeettsslliiccee____(x, i, j)
     |      oobbjjeecctt..____hhaasshh____(x)
     |      eexxcceeppttiioonnss..EExxcceeppttiioonn..____iinniitt____(...)
     |      eexxcceeppttiioonnss..EExxcceeppttiioonn..____nneeww____(T, S, *...)
     |      eexxcceeppttiioonnss..BBaasseeEExxcceeppttiioonn..____rreedduuccee____(...)
     |      oobbjjeecctt..____rreedduuccee__eexx____(...)
     |      eexxcceeppttiioonnss..BBaasseeEExxcceeppttiioonn..____rreepprr____(x)
     |      eexxcceeppttiioonnss..BBaasseeEExxcceeppttiioonn..____sseettaattttrr____(...)
     |      eexxcceeppttiioonnss..BBaasseeEExxcceeppttiioonn..____sseettssttaattee____(...)
     |      eexxcceeppttiioonnss..BBaasseeEExxcceeppttiioonn..____ssttrr____(x)

FFUUNNCCTTIIOONNSS
    
    ffffiinndd(path, shellglobs=None, namefs=None, relative=True)
        Find files in the directory tree starting at 'path' (filtered by 
        Unix shell-style wildcards ('shellglobs') and/or the functions in 
        the 'namefs' sequence).
        
        Please not that the shell wildcards work in a cumulative fashion 
        i.e. each of them is applied to the full set of file *names* found.
        
        Conversely, all the functions in 'namefs'
        
          - only get to see the output of their respective predecessor 
            function in the sequence (with the obvious exception of the 
            first function)
          - are applied to the full file *path* (whereas the shell-style 
            wildcards are only applied to the file *names*)
        RReettuurrnnss::
            paths for files found
        RReettuurrnn  ttyyppee::
            sequence
    
    ffffiinnddggrreepp(path, regexl, shellglobs=None, namefs=None, relative=True, 
              linenums=False)
        Find files in the directory tree starting at 'path' (filtered by 
        Unix shell-style wildcards ('shellglobs') and/or the functions in 
        the 'namefs' sequence) and search inside these.
        
        Additionaly, the file content will be filtered by the regular 
        expressions in the 'regexl' sequence. Each entry in the latter is a
        
          - either a string (with the regex definition)
          - or a tuple with arguments accepted by re.compile() (the re.M 
            and re.S flags will have no effect though)
        
        For all the files that pass the file name/content tests the 
        function returns a dictionary where the
        
          - key is the file name and the
          - value is a string with lines filtered by 'regexl'
        RReettuurrnnss::
            file name (key) and lines filtered by 'regexl' (value)
        RReettuurrnn  ttyyppee::
            dict
    
    ffrreeppllaaccee(path, regexl, shellglobs=None, namefs=None, bext='.bak')
        Find files in the directory tree starting at 'path' (filtered by 
        Unix shell-style wildcards ('shellglobs') and/or the functions in 
        the 'namefs' sequence) and perform an in-place search/replace 
        operation on these.
        
        Additionally, an in-place search/replace operation is performed on 
        the content of all the files (whose names passed the tests) using 
        the regular expressions in 'regexl'.
        
        Please note: 'regexl' is a sequence of 3-tuples, each having the 
        following elements:
        
          - search string (Python regex syntax)
          - replace string (Python regex syntax)
          - regex flags or 'None' (re.compile syntax)
        
        Copies of the modified files are saved in backup files using the 
        extension specified in 'bext'.
        RReettuurrnnss::
            total number of files modified
        RReettuurrnn  ttyyppee::
            number
    
    pprriinnttrr(results)
        Print the results of the ffind()/ffindgrep() functions.
        
        The output format is similar to the one used by the UNIX find 
        utility.

